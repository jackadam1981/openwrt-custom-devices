#!/bin/sh
# Hiker Print - Reset Button Handler with LED feedback
# 2秒: LED慢闪提示重启，松开即重启
# 5秒: LED快闪提示恢复出厂，松开即执行重置

. /lib/functions.sh

LED_R="/sys/class/leds/red:led_r/brightness"
LED_R_TRIGGER="/sys/class/leds/red:led_r/trigger"
PIDFILE="/var/run/reset_button_led.pid"

# Function to check if LED script is running
stop_led_script() {
	if [ -f "$PIDFILE" ]; then
		local pid=$(cat "$PIDFILE")
		if [ -d "/proc/$pid" ]; then
			kill "$pid" 2>/dev/null
		fi
		rm -f "$PIDFILE"
	fi
}

# Function to blink LED with frequency based on elapsed time
led_blink_loop() {
	local led_file=$1
	local period_slow=$2  # Period for 2-5s (slow blink: 0.5s)
	local period_fast=$3  # Period for 5s+ (fast blink: 0.1s)
	
	echo "none" > "$LED_R_TRIGGER" 2>/dev/null
	
	local start_time=$(date +%s)
	
	while [ ! -f /tmp/stop_led_blink ]; do
		local now=$(date +%s)
		local elapsed=$((now - start_time))
		
		# Determine blink period based on elapsed time
		if [ $elapsed -ge 5 ]; then
			local period=$period_fast  # Fast blink after 5s
		else
			local period=$period_slow  # Slow blink before 5s
		fi
		
		# Turn on
		echo 1 > "$led_file" 2>/dev/null
		sleep "$period"
		
		# Turn off
		echo 0 > "$led_file" 2>/dev/null
		sleep "$period"
	done
	
	rm -f /tmp/stop_led_blink
}

case "${ACTION}" in
	pressed)
		# Button pressed - start LED feedback loop
		stop_led_script
		
		# Start background LED blinking process
		touch /tmp/stop_led_blink
		led_blink_loop "$LED_R" 0.5 0.1 &
		echo $! > "$PIDFILE"
		;;
	released)
		# Button released - stop LED and execute action
		stop_led_script
		touch /tmp/stop_led_blink
		sleep 0.1  # Wait for LED to turn off
		
		logger "$BUTTON pressed for $SEEN seconds"
		
		# Turn off LED
		echo "none" > "$LED_R_TRIGGER" 2>/dev/null
		echo 0 > "$LED_R" 2>/dev/null
		
		if [ "$SEEN" -lt 2 ]
		then
			# <2秒: 无操作
			echo "No action (<2s)" > /dev/console
			exit 0
		elif [ "$SEEN" -ge 2 ] && [ "$SEEN" -lt 5 ]
		then
			# 2-5秒: 重启
			echo "REBOOT (${SEEN}s pressed)" > /dev/console
			echo 1 > "$LED_R" 2>/dev/null
			sync
			sleep 0.5
			reboot
		elif [ "$SEEN" -ge 5 ]
		then
			# >=5秒: 恢复出厂设置
			echo "FACTORY RESET (${SEEN}s pressed)" > /dev/console
			# Fast blink before reset
			for i in 1 2 3 4 5; do
				echo 1 > "$LED_R" 2>/dev/null
				sleep 0.1
				echo 0 > "$LED_R" 2>/dev/null
				sleep 0.1
			done
			jffs2reset -y && reboot &
		fi
		;;
esac

return 0
